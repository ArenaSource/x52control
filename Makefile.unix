TARGET	= lin.xpl
OUTDIR	= build
INTDIR	= $(OUTDIR)/obj

CC		= gcc
CPP		= g++
LD		= g++
AR		= ar

DEFS	= -DLIN -DLIL -DPIC -DXPML200

CFLAGS		= -m32 -O2 -fPIC -fomit-frame-pointer -Wall
CPPFLAGS	= $(CFLAGS)
#LDFLAGS	= -m32 -nostdlib -Wl,--unresolved-symbols=report-all,-shared,-export-dynamic,-soname,$(TARGET),-s
LDFLAGS		= -m32 -nostdlib -Wl,-shared,-export-dynamic,-soname,$(TARGET),-s
ARFLAGS		= rcs

OBJ_PLUGIN	=	src/main.o \
				src/x52tools.o \
				src/x52data.o \
				src/x52out.o \
				src/usb/usb.o \
				src/usb/linux.o \
				src/usb/descriptors.o \
				src/usb/error.o

###########################################################

clearscreen = echo -e "\033[2J\033[H"

print_clean = echo -e "\033[0;31mcleaning x52control (linux)\033[0m"

print_link = echo -n -e "\033[0;34m[ linking     ]\033[0m: " && basename
print_comp = echo -n -e "\033[0;32m[ compiling   ]\033[0m: " && basename
print_arch = echo -n -e "\033[0;34m[ archiving   ]\033[0m: " && basename

print_error = (echo -e "\033[0;31m[ FAILED ]\033[0m" && false)

###########################################################

.SILENT:

all:	make_dirs $(OUTDIR)/$(TARGET)

make_dirs:
	-mkdir -p $(INTDIR)

%.o: %.c
	$(print_comp) $@
	$(CC) $(CFLAGS) $(DEFS) -c -o $@ $< || $(print_error)

%.o: %.cpp
	$(print_comp) $@
	$(CPP) $(CPPFLAGS) $(DEFS) -c -o $@ $< || $(print_error)

$(INTDIR)/cstd.a:
	$(print_arch) $@
	-mkdir -p $(INTDIR)/tmp
	cd $(INTDIR)/tmp && \
	$(AR) x /usr/lib/libc.a && \
	$(AR) x /usr/lib/libc_nonshared.a && \
	$(AR) x /usr/lib/gcc/x86_64-redhat-linux/4.3.0/32/libgcc.a && \
	$(AR) x /usr/lib/gcc/x86_64-redhat-linux/4.3.0/32/libgcc_eh.a

	$(AR) $(ARFLAGS) $(INTDIR)/cstd.a $(INTDIR)/tmp/*
	rm -rdf $(INTDIR)/tmp

$(OUTDIR)/$(TARGET):	$(OBJ_PLUGIN) $(INTDIR)/cstd.a
	$(print_link) $@
	$(LD) $(LDFLAGS) -o $(OUTDIR)/$(TARGET) $(OBJ_PLUGIN) /usr/lib/gcc/x86_64-redhat-linux/4.3.0/32/libstdc++.a /usr/lib/libpthread.a /lib/ld-linux.so.2 $(INTDIR)/cstd.a || $(print_error)

clean:
	$(print_clean)
	-rm -rdf $(OUTDIR)
	-rm -rdf $(OBJ_PLUGIN)

